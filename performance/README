                  TRIO - Topology Robustness Indicators
                         PERFORMANCE BENCHMARK
                   [Copyright (C) 2015 - SINTEF ICT]


This run a performance benchmark of the TRIO tool, which computes robustness
indicators for software architectures.

In a nutshell, this benchmark randomly generates uniformly distributed 
architecture models, and measures for each of them the time spent simulating
a single random failure sequence.

USAGE
-----

To run the performance benchmark, run the following command. A sample output 
text is shown below.
    
    $> java -cp "bin/*" eu.diversify.trio.performance.Runner
    TRIO - Topology Robustness Indicator
    Copyright (C) 2015 - SINTEF ICT

    Running 250 simulation(s) with:
     - assembly sizes within [10, 1000]
     - assembly edge densities in [0,2, 0,8]
    OK. Results saved in 'scalability.csv'

By default, all the data produced by the benchmark can be found in the CSV file 
named "scalability.csv".
 
The name of the resulting CSV file can be given on the command line using the
"-output" or "-o" for short, as follows:

    $> java -cp "bin/*" eu.diversify.trio.performance.Runner -output test.csv

Additionally, one may use the given R script to quickly visualize the data 
generated by this benchmark, using the following command (which requires R to be 
installed on the machine).

    $> R CMD BATCH "--args scalability.csv" regression.R

The output of this R script is then available in the "regression.Rout" file, 
where the details of the regression analysis can be found (e.g., regression 
coefficients, p-values, R2 statistics).

Two PDF file are generated, namely "raw_data.pdf" and "regression.pdf", which 
show the data generated and the model fitted on them.


CONFIGURATION
-------------

The configuration of the benchmark is described in the "setup.properties" file.
An alternative configuration file, say "my_setup.properties" can be fed to the
benchmark using the syntax:
    
    $> java -cp "bin/*" eu.diversify.trio.performance.Runner -setup my_setup.properties

The properties available are:

 - 'sample.count': the number of models that will be generated.

 - 'warmup.sample.count': the number of models used for warming-up the JVM (and 
   cached the code compiled by the JIT).

 - 'minimum.assembly.size': the minimum number of components to include in the 
   randomly generated architecture models

 - 'maximum.assembly.size': the maximum number of components to include in the 
   randomly generated architecture models

 - 'minimum.edge.probability': the minimum probability to generate a dependency
   between two components.

 - 'maximum.edge.probability': the maximum probability to generate a dependency
   between two components.

LOGGING
-------

For diagnostic and trouble shooting, logging can be activated by using the 
command. The logs are written in a file named "trio-benchmark.log".

    $> java -Djava.util.logging.config.file=logging.properties -cp "bin/*" eu.diversify.trio.performance.Runner

We refer the interested reader to the official documentation for a detail 
treatment of the content of the "logging.properties" file.